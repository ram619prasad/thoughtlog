swagger: "2.0"
info:
  version: "1.0"
  title: Thoughtlog REST api documentation
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
# tagss
tags:
- name: User
  description: "User Authentication Management"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /users/signup:
    x-swagger-router-controller: users_controller
    post:
      tags:
        - User
      summary: Allows a user to signup to Thoughtlog
      operationId: signup
      # movie info to be stored
      parameters:
        - in: body
          name: body
          description: User Signup
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserCreateResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/profile:
    x-swagger-router-controller: users_controller
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: API for fetching a users profile
      operationId: profile
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserProfileResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/signin:
    x-swagger-router-controller: users_controller
    post:
      tags:
        - User
      summary: Allows a user to signin to Thoughtlog
      operationId: signin
      parameters:
        - in: body
          name: body
          description: User Signin
          required: true
          schema:
            $ref: "#/definitions/UserSignin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserProfileResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/logout:
    x-swagger-router-controller: users_controller
    delete:
      security:
        - Bearer: []
      tags: 
        - User
      summary: Logsout a user on a specific device
      operationId: logout
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      status:
        type: string
      message:
        type: array
        items:
          type: string
  UserCreateResponse:
    type: object
    required:
        - message
        - token
    properties:
      message:
        type: string
      token:
        type: string
  UserProfileResponse:
    type: object
    properties:
      _id:
        type: string
      email:
        type: string
      username:
        type: string
  User:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
      - email
      - password
      - username
  UserSignin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
